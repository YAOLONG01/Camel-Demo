package org.service.query;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2018-02-02T12:59:57.775+08:00
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "QueryServiceService", 
                  wsdlLocation = "http://localhost:9080/server/queryservice?wsdl",
                  targetNamespace = "http://query.service.org/") 
public class QueryServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://query.service.org/", "QueryServiceService");
    public final static QName QueryServicePort = new QName("http://query.service.org/", "QueryServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:9080/server/queryservice?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(QueryServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:9080/server/queryservice?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public QueryServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public QueryServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public QueryServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public QueryServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public QueryServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns QueryServiceInter
     */
    @WebEndpoint(name = "QueryServicePort")
    public QueryServiceInter getQueryServicePort() {
        return super.getPort(QueryServicePort, QueryServiceInter.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueryServiceInter
     */
    @WebEndpoint(name = "QueryServicePort")
    public QueryServiceInter getQueryServicePort(WebServiceFeature... features) {
        return super.getPort(QueryServicePort, QueryServiceInter.class, features);
    }

}
